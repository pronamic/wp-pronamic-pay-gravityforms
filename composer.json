{
	"name": "wp-pay-extensions/gravityforms",
	"description": "Gravity Forms driver for the WordPress payment processing library.",
	"keywords": ["wordpress", "wp", "pay", "gravityforms", "extension", "pronamic"],
	"homepage": "http://www.wp-pay.org/extensions/gravityforms/",
	"license": "GPL-3.0-or-later",
	"authors": [
		{
			"name": "Pronamic",
			"email": "info@pronamic.eu",
			"homepage": "http://www.pronamic.eu/",
			"role": "Company"
		},
		{
			"name": "Remco Tolsma",
			"email": "info@remcotolsma.nl",
			"homepage": "http://www.remcotolsma.nl/",
			"role": "Developer"
		}
	],
	"support": {
		"email": "support@wp-pay.org",
		"issues": "https://github.com/wp-pay-extensions/gravityforms/issues",
		"source": "https://github.com/wp-pay-extensions/gravityforms"
	},
	"autoload": {
		"psr-4": {
			"Pronamic\\WordPress\\Pay\\Extensions\\GravityForms\\": "src/"
		}
	},
	"config": {
		"sort-packages": true,
		"allow-plugins": {
			"composer/installers": true,
			"dealerdirect/phpcodesniffer-composer-installer": true,
			"roots/wordpress-core-installer": true,
			"bamarni/composer-bin-plugin": true
		}
	},
	"require": {
		"php": ">=7.4",
		"pronamic/wp-datetime": "^2.1",
		"pronamic/wp-gravityforms-nl": "^3.0",
		"pronamic/wp-money": "^2.2",
		"pronamic/wp-number": "^1.2",
		"wp-pay/core": "^4.7"
	},
	"require-dev": {
		"bamarni/composer-bin-plugin": "^1.4",
		"php-coveralls/php-coveralls": "^2.5",
		"phpmd/phpmd": "^2.9",
		"pronamic/gravityforms": "^2.7",
		"pronamic/wp-coding-standards": "^1.3",
		"pronamic/wp-deployer": "^1.2",
		"roots/wordpress": "^6.0",
		"wp-phpunit/wp-phpunit": "^6.1",
		"yoast/phpunit-polyfills": "^1.0"
	},
	"scripts": {
		"coveralls": "vendor/bin/php-coveralls -v",
		"phpcbf": "XDEBUG_MODE=off vendor/bin/phpcbf",
		"phpcs": "XDEBUG_MODE=off vendor/bin/phpcs -s -v",
		"phplint": "find src tests -name '*.php' | xargs -n 1 -P 4 php -l",
		"phpmd": "vendor/bin/phpmd src,tests text phpmd.ruleset.xml --suffixes php",
		"phpstan": "vendor/bin/phpstan analyse --memory-limit=-1",
		"phpunit": "vendor/bin/phpunit",
		"post-install-cmd": "echo 'Optionally run: composer bin all install'",
		"post-update-cmd": "echo 'Optionally run: composer bin all update'",
		"psalm": "vendor/bin/psalm",
		"build-docs": [
			"vendor/bin/wp-documentor parse src --format=markdown --relative=docs > docs/hooks.md"
		]
	}
}
